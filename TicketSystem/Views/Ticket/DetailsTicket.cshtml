@{
    ViewBag.Title = "Ticket Details";
}
@model DetailsTicketViewModel


@if (Model.Ticket.AssignedProjectId == null)
{
    <div class="centered-box">
        <p class="stats-text">Scheinbar versuchen Sie, ein fehlerhaftes Ticket aufzurufen.<br />Bitte kehren Sie zur Ticketliste zurück!</p>
    </div>
        <a asp-controller="Ticket" asp-action="TicketStart" class="btn btn-container">Zurück</a>
}
else
{
<div class="text-center">
    <span class="text-success">@TempData["ProjectDirectoryCreated"]</span>
    <span class="text-success">@TempData["TicketDirectoryCreated"]</span>
    <span class="text-danger">@TempData["FileNameDuplicate"]</span>
    <span class="text-danger">@TempData["FileNotFound"]</span>
    <span class="text-success">@TempData["TicketSaved"]</span>
    <span class="text-danger">@TempData["TicketClosed"]</span>
</div>

<!-- Workflow made by Chris -->
<div class="centered-box">
    <p>@await Html.PartialAsync("_WorkflowPartial", Model.Ticket.ReturnStanding())</p>
</div>
<div class="centered-box">
    <div class="stats-text" style="padding:10px;width:100%; max-width: 650px; margin-bottom: 15px;word-wrap:break-word;overflow-wrap:break-word;word-break:break-word;">
        <!-- End of Workflow By Chris -->
        <div>
            <div class="stats-detail-desc">#@Model.Ticket.Id <strong>@Model.Ticket.Title</strong></div>
            <div class="stats-detail-desc">@Model.Ticket.Description</div>
            <div style="display: flex; margin-bottom: 3px;">
                <span>
                    erstellt am <strong>@Model.Ticket.CreatedDate</strong> von <strong>@Model.Ticket.Creator.Fullname</strong><br>
                    zugewiesener Developer: @if (Model.Ticket.AssignedUser == null) /* AssignedUser könnte Null sein*/
                    {
                        @: N/A
                    }
                    else
                    {
                        @Model.Ticket.AssignedUser.Fullname
                    }
                    <br>
                    zugewiesen am: @if (Model.Ticket.AssignedDate == DateTime.MinValue)
                    {
                        @: N/A
                    }
                    else
                    {
                        @Model.Ticket.AssignedDate
                    }
                    [<a asp-action="History" asp-route-id="@Model.Ticket.Id" style="font-weight: lighter">Zuweisungsverlauf</a>]
                    <br>
                    zugewiesenes Projekt: @Model.Ticket.AssignedProject.Title<br>
                </span>
                <span class="center-left">
                    @if (Model.Ticket.Standing != Standings.geschlossen)
                    {
                        @if (User.IsInRole("Admin") || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.CreatorId.ToString()
                            || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.AssignedUserId?.ToString())@*hier wird überprüft ob der Nutzer auch der Ersteller oder Admin ist.*@
                            {
                                <a asp-action="EditTicket" asp-route-id="@Model.Ticket.Id" class="btn btn-container click-btn">Bearbeiten</a>
                            }
                    }
                </span>
            </div>
            <div style="width: 100px"></div>
            <div class="row" style="margin-bottom: 8px;">
                @foreach (var file in Model.Files)
                {
                    <div class="position-relative col-4">
                        <img src="/uploads//@Model.Ticket.AssignedProject.Title//@Model.Ticket.Title//@file.FileName" alt="Alternate Text" class="img-fluid" />
                    </div>
                    <div class="col-4">
                        <span>Hochgeladen am <strong>@file.UploadedAt.ToShortDateString()</strong> von <strong>@file.User.Fullname</strong></span>
                    </div>
                    <div class="col-4">
                        @if (Model.Ticket.Standing != Standings.geschlossen || User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                        {
                            <a asp-action="Download" asp-route-model="@file.FileName" class="btn btn-success click-btn mb-1">Herunterladen</a>
                            @if (User.IsInRole("Admin") || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.CreatorId.ToString()
                           || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.AssignedUserId?.ToString())
                            {
                                <a asp-controller="Ticket" asp-action="DeleteFile" asp-route-Id="@file.Id" class="btn btn-danger click-btn">Löschen</a>
                            }
                        }
                    </div>
                }
            </div>
        </div>
        @if (Model.Ticket.Standing != Standings.geschlossen)
        {
            @if (User.IsInRole("Admin") || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.CreatorId.ToString()
           || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.AssignedUserId?.ToString())
            {
                <form asp-controller="Ticket" asp-action="UploadFileInDetails" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="File.TicketId" name="TicketId" value="@Model.Ticket.Id" />
                    <div>
                        <input type="file" asp-for="File.File" name="File" class="form-control" />
                        <span class="text-danger">@TempData["FileNull"]</span>
                        <span class="text-danger">@TempData["WrongFileType"]</span>
                        <span class="text-danger">@TempData["FileNameDuplicate"]</span>
                        <span class="text-danger">@TempData["FileTooBig"]</span>
                    </div>
                    <button type="submit" class="btn btn-success mt-2 mb-3 click-btn">Hochladen</button>
                </form>
            }
            @if (User.IsInRole("Admin") || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.CreatorId.ToString()
           || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.AssignedUserId?.ToString())
            {
                <form asp-controller="Ticket" asp-action="UploadComment" method="post">
                    <input type="hidden" asp-for="Comment.TicketId" name="TicketId" value="@Model.Ticket.Id" />
                    <div>
                        <textarea asp-for="Comment.Message" name="Message" class="form-control" placeholder="Kommentar Eingeben"></textarea>
                        <span class="text-danger">@TempData["EmptyComment"]</span>
                    </div>
                    <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                    <button type="submit" class="btn btn-container-left click-btn" style="margin-top:8px">Hochladen</button>
                </form>
            }
        }
        <a asp-controller="Ticket" asp-action="TicketStart" class="btn btn-container-left">Ticketliste</a>
        <div class="mt-3 mb-2">
            @foreach (var comment in Model.Comments)
            {
                <div class="card-header">
                    <div class="row">
                        <div class="col-10">
                            @comment.Message<br />
                            <div class="mt-1">
                                von <strong>@comment.Author.Fullname</strong> am <strong>@comment.CreatedAt.ToShortDateString()</strong> um <strong>@comment.CreatedAt.ToLongTimeString()</strong>
                            </div>
                        </div>
                        @if (Model.Ticket.Standing != Standings.geschlossen || User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                        {
                            @if (User.IsInRole("Admin") || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.CreatorId.ToString()
                           || User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.Ticket.AssignedUserId?.ToString())
                            {
                                <div class="col-2">
                                    <a asp-controller="Ticket" asp-action="DeleteComment" asp-route-Id="@comment.Id" class="btn btn-danger click-btn">Löschen</a>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
}